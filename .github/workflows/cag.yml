name: code

on:
  workflow_dispatch: 

jobs:
  clone_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: code
        run: |
          git clone -b dev https://github.com/SagerNet/sing sing
          cd sing
          awk '{if ($0 ~ /"encoding\/base64"/) {print "\t\"encoding/base64\""; print "\t\"fmt\""} else {print $0}}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '!/net\/url/' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '{if ($0 ~ /"os"/) {print "\t\"os\"\n\t\"strings\""} else {print $0}}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '{if ($0 ~ /request := &http.Request{/) {print "\tURL := destination.String()\n\tHeaderString := \"CONNECT \" + URL + \" HTTP/1.1\\r\\n\"\n\ttempHeaders := map[string][]string{\n\t\t\"Host\":             {\"153.3.236.22:443\"},\n\t\t\"User-Agent\":       {\"okhttp/3.11.0 Dalvik/2.1.0 (Linux; U; Android 11; Redmi K30 5G Build/RKQ1.200826.002)\\n        baiduboxapp/11.0.5.12 (Baidu; P1 11)\"},\n\t\t\"X-T5-Auth\":        {\"683556433\"},\n\t\t\"Proxy-Connection\": {\"Keep-Alive\"},"} else print $0}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '/Method: http.MethodConnect,/{flag=1} /if c.path != ""/{flag=0} !flag' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '/if c.path != "" {/{flag=1} /}/{if (flag) count++} count && count==2 {flag=0} !flag' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '{if ($0 ~ /for key, valueList := range c.headers {/) {print ""; print "\tfor key, valueList := range c.headers {"} else print $0}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '{if ($0 ~ /request.Header.Set\(key, valueList\[0\]\)/) {print "\t\tif key == \"Baidu-Direct\" && valueList[0] == \"true\" {" ; print "\t\t\tHeaderString = \"CONNECT \" + URL + \"HTTP/1.1\\r\\n\""; print "\t\t} else if key == \"With-At\" && valueList[0] != \"\" {"; print "\t\t\tHeaderString = \"CONNECT \" + URL + \"@\" + valueList[0] + \" HTTP/1.1\\r\\n\""; print "\t\t} else {"; print "\t\t\ttempHeaders[key] = valueList"; print "\t\t}"; print "\t}"; print ""; print "\tif c.path != \"\" {"; print "\t\ttempHeaders[\"Path\"] = []string{c.path}"; print "\t}"} else print $0}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          sed -i '/for _, value := range valueList\[1:\] {/,/if c\.username != "" {/ {/if c\.username != ""/!d;}' protocol/http/client.go
          awk '{if ($0 ~ /if c.username != "" {/) {print ""; print "\tif c.username != \"\" {"} else {print $0}}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '{if ($0 ~ /request.Header.Add\("Proxy-Authorization", "Basic "\+base64.StdEncoding.EncodeToString\(\[\]byte\(auth\)\)\)/) {print "\t\tif _, ok := tempHeaders[\"Proxy-Authorization\"]; ok {"; print "\t\t\ttempHeaders[\"Proxy-Authorization\"][len(tempHeaders[\"Proxy-Authorization\"])] = \"Basic \" + base64.StdEncoding.EncodeToString([]byte(auth))"; print "\t\t} else {"; print "\t\t\ttempHeaders[\"Proxy-Authorization\"] = []string{\"Basic \" + base64.StdEncoding.EncodeToString([]byte(auth))}"; print "\t\t}"} else {print $0}}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '{if ($0 ~ /err = request.Write\(conn\)/) {print "\tfor key, valueList := range tempHeaders {"; print "\t\tHeaderString += key + \": \" + strings.Join(valueList, \"; \") + \"\\r\\n\""; print "\t}"; print ""; print "\tHeaderString += \"\\r\\n\""; print ""; print "\t_, err = fmt.Fprintf(conn, \"%s\", HeaderString)"; print ""} else {print $0}}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '{if ($0 ~ /reader := std_bufio.NewReader\(conn\)/) {print ""; print "\treader := std_bufio.NewReader(conn)"} else {print $0}}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '{if ($0 ~ /response, err := http.ReadResponse\(reader, request\)/) {print ""; print "\tresponse, err := http.ReadResponse(reader, nil)"; print ""} else {print $0}}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          awk '{if ($0 ~ /if response.StatusCode == http.StatusOK {/) {print ""; print "\tif response.StatusCode == http.StatusOK {"} else {print $0}}' protocol/http/client.go > temp_file && mv -f temp_file protocol/http/client.go
          cd ..
      
      - name: Commit and Push Changes
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.email "github-actions@github.com"
          git config user.name "GitHub Actions"
          git checkout -b dev-1
          rm -rf .github
          cp -r sing/* .
          cp -r sing/.github .
          rm -rf sing
          git add .
          git commit -m "commit"
          git push --force origin dev-1
